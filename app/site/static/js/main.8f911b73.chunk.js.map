{"version":3,"sources":["components/header/logo.png","components/header/header.tsx","components/job/job.tsx","containers/list/list.tsx","test-data.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Header","react","className","src","logo","alt","id","React","Job","this","props","job","contents","from","to","rider","timeOfCall","collected","delivered","List","filteredList","map","jobdata","index","job_job","key","testData","App","state","react_default","a","createElement","Fragment","header_header","list_list","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8f911b73.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2b94c3e9.png\";","import * as React from \"react\";\nimport \"./header.css\";\nimport logo from \"./logo.png\";\n\nexport interface IProps {}\n\nexport interface IState {}\n\nclass Header extends React.Component<IProps, IState> {\n  // state = { :  }\n\n  public render() {\n    return (\n      <>\n        <div className=\"header\">\n          <img src={logo} alt={\"charity logo\"} className=\"logo\" />\n          <h1>\n            Co-ordinator <br />\n            dashboard\n          </h1>\n          <div className=\"commandBox\">\n            <i id=\"welcomeInfo\" className=\"fas fa-info-circle\" />\n            Command box here\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Header;\n","import * as React from \"react\";\nimport \"./job.css\";\nimport { IJob } from \"../../test-data\";\n\nexport interface IProps {\n  job: IJob;\n}\n\nexport interface IState {}\n\nclass Job extends React.Component<IProps, IState> {\n  // state = { :  }\n  public render() {\n    return (\n      <>\n        <div className=\"job\">\n          {/* the order of columns depends on the below. If columns \n          need to be re-arranged, you will need to re-examine column\n          widths in CSS files, too */}\n          <div className=\"packageContents\">{this.props.job.contents}</div>\n          <div className=\"transportFrom\">{this.props.job.from}</div>\n          <div className=\"transportTo\">{this.props.job.to}</div>\n          <div className=\"rider\">{this.props.job.rider}</div>\n          <div className=\"timeOfCall\">{this.props.job.timeOfCall}</div>\n          <div className=\"collected\">{this.props.job.collected}</div>\n          <div className=\"delivered\">{this.props.job.delivered}</div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Job;\n","import * as React from \"react\";\nimport Job from \"../../components/job/job\";\nimport \"./list.css\";\nimport { IJob } from \"../../test-data\";\n\nexport interface IProps {\n  filteredList: IJob[];\n}\n\nexport interface IState {}\n\nclass List extends React.Component<IProps, IState> {\n  // state = { :  }\n  public render() {\n    return (\n      <>\n        <div className=\"jobsList\">\n          <div className=\"tableHeading\">\n            {/* <Job job={testData[0]} /> */}\n            {/* if you re-arrange columns in Job component, you need to re-arrange these, too */}\n            <div>\n              <div>Contents</div>\n              <div>From</div>\n              <div>To</div>\n              <div>Rider</div>\n              <div>TOC</div>\n              <div>Collected at</div>\n              <div>Delivered at</div>\n            </div>\n          </div>\n          {this.props.filteredList.map((jobdata, index) => (\n            <Job key={index} job={jobdata} />\n          ))}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default List;\n","export interface IJob {\n  timeOfCall: string;\n  contents: string;\n  from: string;\n  to: string;\n  rider: string;\n  collected: number | string;\n  delivered: number | string;\n}\n\nexport const testData: IJob[] = [\n  {\n    timeOfCall: \"1907\",\n    contents: \"blood\",\n    from: \"Eliz.Casson unit\",\n    to: \"BRI A&E\",\n    rider: \"North\",\n    collected: \"1938\",\n    delivered: \"2005\"\n  },\n  {\n    timeOfCall: \"1907\",\n    contents: \"milk\",\n    from: \"SoutmeadNICU\",\n    to: \"Weston Handover\",\n    rider: \"West\",\n    collected: \"1940\",\n    delivered: \"en route\"\n  },\n  {\n    timeOfCall: \"1907\",\n    contents: \"blood\",\n    from: \"Eliz.Casson unit\",\n    to: \"BRI A&E\",\n    rider: \"unassigned\",\n    collected: \"1938\",\n    delivered: \"en route\"\n  },\n  {\n    timeOfCall: \"1907\",\n    contents: \"milk\",\n    from: \"SoutmeadNICU\",\n    to: \"Weston Handover\",\n    rider: \"West\",\n    collected: \"1940\",\n    delivered: \"en route\"\n  },\n  {\n    timeOfCall: \"1907\",\n    contents: \"blood\",\n    from: \"Eliz.Casson unit\",\n    to: \"BRI A&E\",\n    rider: \"North\",\n    collected: \"not yet\",\n    delivered: \"not yet\"\n  },\n  {\n    timeOfCall: \"1907\",\n    contents: \"milk\",\n    from: \"SoutmeadNICU\",\n    to: \"Weston Handover\",\n    rider: \"West\",\n    collected: \"1940\",\n    delivered: \"en route\"\n  },\n  {\n    timeOfCall: \"1907\",\n    contents: \"blood\",\n    from: \"Eliz.Casson unit\",\n    to: \"BRI A&E\",\n    rider: \"North\",\n    collected: \"1938\",\n    delivered: \"2005\"\n  },\n  {\n    timeOfCall: \"1907\",\n    contents: \"milk\",\n    from: \"SoutmeadNICU\",\n    to: \"Weston Handover\",\n    rider: \"West\",\n    collected: \"1940\",\n    delivered: \"en route\"\n  },\n  {\n    timeOfCall: \"1907\",\n    contents: \"blood\",\n    from: \"Eliz.Casson unit\",\n    to: \"BRI A&E\",\n    rider: \"unassigned\",\n    collected: \"1938\",\n    delivered: \"en route\"\n  },\n  {\n    timeOfCall: \"1907\",\n    contents: \"milk\",\n    from: \"SoutmeadNICU\",\n    to: \"Weston Handover\",\n    rider: \"West\",\n    collected: \"1940\",\n    delivered: \"en route\"\n  },\n  {\n    timeOfCall: \"1907\",\n    contents: \"blood\",\n    from: \"Eliz.Casson unit\",\n    to: \"BRI A&E\",\n    rider: \"North\",\n    collected: \"not yet\",\n    delivered: \"not yet\"\n  },\n  {\n    timeOfCall: \"1907\",\n    contents: \"milk\",\n    from: \"SoutmeadNICU\",\n    to: \"Weston Handover\",\n    rider: \"West\",\n    collected: \"1940\",\n    delivered: \"en route\"\n  },\n  {\n    timeOfCall: \"1907\",\n    contents: \"milk\",\n    from: \"SoutmeadNICU\",\n    to: \"Weston Handover\",\n    rider: \"West\",\n    collected: \"1940\",\n    delivered: \"en route\"\n  },\n  {\n    timeOfCall: \"1907\",\n    contents: \"blood\",\n    from: \"Eliz.Casson unit\",\n    to: \"BRI A&E\",\n    rider: \"unassigned\",\n    collected: \"1938\",\n    delivered: \"en route\"\n  },\n  {\n    timeOfCall: \"1907\",\n    contents: \"milk\",\n    from: \"SoutmeadNICU\",\n    to: \"Weston Handover\",\n    rider: \"West\",\n    collected: \"1940\",\n    delivered: \"en route\"\n  },\n  {\n    timeOfCall: \"1907\",\n    contents: \"blood\",\n    from: \"Eliz.Casson unit\",\n    to: \"BRI A&E\",\n    rider: \"North\",\n    collected: \"not yet\",\n    delivered: \"not yet\"\n  },\n  {\n    timeOfCall: \"1907\",\n    contents: \"milk\",\n    from: \"SoutmeadNICU\",\n    to: \"Weston Handover\",\n    rider: \"West\",\n    collected: \"1940\",\n    delivered: \"en route\"\n  },\n  {\n    timeOfCall: \"1907\",\n    contents: \"blood\",\n    from: \"Eliz.Casson unit\",\n    to: \"BRI A&E\",\n    rider: \"North\",\n    collected: \"1938\",\n    delivered: \"2005\"\n  },\n  {\n    timeOfCall: \"1907\",\n    contents: \"milk\",\n    from: \"SoutmeadNICU\",\n    to: \"Weston Handover\",\n    rider: \"West\",\n    collected: \"1940\",\n    delivered: \"en route\"\n  },\n  {\n    timeOfCall: \"1907\",\n    contents: \"blood\",\n    from: \"Eliz.Casson unit\",\n    to: \"BRI A&E\",\n    rider: \"unassigned\",\n    collected: \"1938\",\n    delivered: \"en route\"\n  },\n  {\n    timeOfCall: \"1907\",\n    contents: \"milk\",\n    from: \"SoutmeadNICU\",\n    to: \"Weston Handover\",\n    rider: \"West\",\n    collected: \"1940\",\n    delivered: \"en route\"\n  },\n  {\n    timeOfCall: \"1907\",\n    contents: \"blood\",\n    from: \"Eliz.Casson unit\",\n    to: \"BRI A&E\",\n    rider: \"North\",\n    collected: \"not yet\",\n    delivered: \"not yet\"\n  },\n  {\n    timeOfCall: \"1907\",\n    contents: \"milk\",\n    from: \"SoutmeadNICU\",\n    to: \"Weston Handover\",\n    rider: \"West\",\n    collected: \"1940\",\n    delivered: \"en route\"\n  }\n];\nexport default testData;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/header/header\";\nimport List from \"./containers/list/list\";\nimport testData, { IJob } from \"./test-data\";\n\nexport interface IProps {\n  filteredList: IJob[];\n}\n\nclass App extends Component {\n  public state = { filteredList: testData };\n  public render() {\n    // const modal = document.getElementById(\"myModal\");\n    // const infoIcon = document.getElementById(\"welcomeInfo\");\n\n    // infoIcon.onclick = modalToggled => {\n    //   modalToggled.preventDefault();\n    //   modal.style.display = \"block\";\n    // };\n    // window.onclick = event => {\n    //   if (event.target === modal) {\n    //     modal.style.display = \"none\";\n    //   }\n    // };\n\n    return (\n      <>\n        <div id=\"myModal\" className=\"modal\">\n          <div className=\"modal-content\">\n            <p>This is the welcome modal</p>\n          </div>\n        </div>\n        <Header />\n        <List filteredList={this.state.filteredList} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}