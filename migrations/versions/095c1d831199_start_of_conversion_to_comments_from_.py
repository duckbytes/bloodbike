"""start of conversion to comments from notes

Revision ID: 095c1d831199
Revises: 794bafaf28e4
Create Date: 2020-04-15 19:31:31.624285

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '095c1d831199'
down_revision = '794bafaf28e4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('comment',
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.Column('time_modified', sa.DateTime(), nullable=True),
    sa.Column('flagged_for_deletion', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('body', sa.String(length=10000), nullable=True),
    sa.Column('author_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('parent_type', sa.Integer(), nullable=True),
    sa.Column('parent_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['author_uuid'], ['user.uuid'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index(op.f('ix_comment_time_created'), 'comment', ['time_created'], unique=False)
    op.create_index(op.f('ix_comment_time_modified'), 'comment', ['time_modified'], unique=False)
    op.drop_index('ix_note_time_created', table_name='note')
    op.drop_index('ix_note_time_modified', table_name='note')
    op.drop_table('note')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('note',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('uuid', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('body', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('subject', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('deliverable_uuid', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('session_uuid', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('task_uuid', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('user_uuid', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('vehicle_uuid', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('flagged_for_deletion', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('time_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('time_modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['deliverable_uuid'], ['deliverable.uuid'], name='note_deliverable_uuid_fkey'),
    sa.ForeignKeyConstraint(['session_uuid'], ['session.uuid'], name='note_session_uuid_fkey'),
    sa.ForeignKeyConstraint(['task_uuid'], ['task.uuid'], name='note_task_uuid_fkey'),
    sa.ForeignKeyConstraint(['user_uuid'], ['user.uuid'], name='note_user_uuid_fkey'),
    sa.ForeignKeyConstraint(['vehicle_uuid'], ['vehicle.uuid'], name='note_vehicle_uuid_fkey'),
    sa.PrimaryKeyConstraint('id', name='note_pkey'),
    sa.UniqueConstraint('uuid', name='note_uuid_key')
    )
    op.create_index('ix_note_time_modified', 'note', ['time_modified'], unique=False)
    op.create_index('ix_note_time_created', 'note', ['time_created'], unique=False)
    op.drop_index(op.f('ix_comment_time_modified'), table_name='comment')
    op.drop_index(op.f('ix_comment_time_created'), table_name='comment')
    op.drop_table('comment')
    # ### end Alembic commands ###
