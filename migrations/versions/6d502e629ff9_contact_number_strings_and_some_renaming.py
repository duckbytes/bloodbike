"""contact number strings and some renaming

Revision ID: 6d502e629ff9
Revises: 
Create Date: 2019-11-26 19:37:04.185195

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlalchemy_utils

# revision identifiers, used by Alembic.
revision = '6d502e629ff9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('ward', sa.String(length=64), nullable=True),
    sa.Column('line1', sa.String(length=64), nullable=True),
    sa.Column('line2', sa.String(length=64), nullable=True),
    sa.Column('town', sa.String(length=64), nullable=True),
    sa.Column('county', sa.String(length=64), nullable=True),
    sa.Column('country', sa.String(length=64), nullable=True),
    sa.Column('postcode', sa.String(length=64), nullable=True),
    sa.Column('what3words', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('delete_flags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('object_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('time_to_delete', sa.Integer(), nullable=True),
    sa.Column('time_deleted', sa.DateTime(), nullable=True),
    sa.Column('object_type', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index(op.f('ix_delete_flags_time_deleted'), 'delete_flags', ['time_deleted'], unique=False)
    op.create_index(op.f('ix_delete_flags_timestamp'), 'delete_flags', ['timestamp'], unique=False)
    op.create_table('deliverable_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('patch',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('label', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('label')
    )
    op.create_table('priority',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('label', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('label')
    )
    op.create_table('vehicle',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('manufacturer', sa.String(length=64), nullable=True),
    sa.Column('model', sa.String(length=64), nullable=True),
    sa.Column('date_of_manufacture', sa.Date(), nullable=True),
    sa.Column('date_of_registration', sa.Date(), nullable=True),
    sa.Column('registration_number', sa.String(length=10), nullable=True),
    sa.Column('flagged_for_deletion', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index(op.f('ix_vehicle_timestamp'), 'vehicle', ['timestamp'], unique=False)
    op.create_table('location',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('contact_name', sa.String(length=64), nullable=True),
    sa.Column('contact_number', sa.String(length=64), nullable=True),
    sa.Column('flagged_for_deletion', sa.Boolean(), nullable=True),
    sa.Column('address_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['address.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index(op.f('ix_location_timestamp'), 'location', ['timestamp'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('address_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sqlalchemy_utils.types.email.EmailType(length=255), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('contact_number', sa.String(length=64), nullable=True),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('display_name', sa.String(length=64), nullable=True),
    sa.Column('dob', sa.Date(), nullable=True),
    sa.Column('assigned_vehicle', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('patch_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=64), nullable=True),
    sa.Column('flagged_for_deletion', sa.Boolean(), nullable=True),
    sa.Column('roles', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default='true', nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['address.id'], ),
    sa.ForeignKeyConstraint(['assigned_vehicle'], ['vehicle.uuid'], ),
    sa.ForeignKeyConstraint(['patch_id'], ['patch.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('display_name'),
    sa.UniqueConstraint('username'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index(op.f('ix_user_timestamp'), 'user', ['timestamp'], unique=False)
    op.create_table('session',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('flagged_for_deletion', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.uuid'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index(op.f('ix_session_timestamp'), 'session', ['timestamp'], unique=False)
    op.create_table('task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('pickup_address_id', sa.Integer(), nullable=True),
    sa.Column('dropoff_address_id', sa.Integer(), nullable=True),
    sa.Column('patch', sa.String(length=64), nullable=True),
    sa.Column('contact_name', sa.String(length=64), nullable=True),
    sa.Column('contact_number', sa.String(length=64), nullable=True),
    sa.Column('final_duration', sa.Time(), nullable=True),
    sa.Column('miles', sa.Integer(), nullable=True),
    sa.Column('flagged_for_deletion', sa.Boolean(), nullable=True),
    sa.Column('session_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('priority_id', sa.Integer(), nullable=True),
    sa.Column('assigned_rider', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('pickup_time', sa.DateTime(), nullable=True),
    sa.Column('dropoff_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_rider'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['dropoff_address_id'], ['address.id'], ),
    sa.ForeignKeyConstraint(['pickup_address_id'], ['address.id'], ),
    sa.ForeignKeyConstraint(['priority_id'], ['priority.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['session.uuid'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index(op.f('ix_task_timestamp'), 'task', ['timestamp'], unique=False)
    op.create_table('deliverable',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('task_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.Column('flagged_for_deletion', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['task.uuid'], ),
    sa.ForeignKeyConstraint(['type_id'], ['deliverable_type.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('note',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('body', sa.String(length=10000), nullable=True),
    sa.Column('subject', sa.String(length=200), nullable=True),
    sa.Column('task_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('session_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('vehicle_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deliverable_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['deliverable_id'], ['deliverable.uuid'], ),
    sa.ForeignKeyConstraint(['session_id'], ['session.uuid'], ),
    sa.ForeignKeyConstraint(['task_id'], ['task.uuid'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicle.uuid'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('note')
    op.drop_table('deliverable')
    op.drop_index(op.f('ix_task_timestamp'), table_name='task')
    op.drop_table('task')
    op.drop_index(op.f('ix_session_timestamp'), table_name='session')
    op.drop_table('session')
    op.drop_index(op.f('ix_user_timestamp'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_location_timestamp'), table_name='location')
    op.drop_table('location')
    op.drop_index(op.f('ix_vehicle_timestamp'), table_name='vehicle')
    op.drop_table('vehicle')
    op.drop_table('priority')
    op.drop_table('patch')
    op.drop_table('deliverable_type')
    op.drop_index(op.f('ix_delete_flags_timestamp'), table_name='delete_flags')
    op.drop_index(op.f('ix_delete_flags_time_deleted'), table_name='delete_flags')
    op.drop_table('delete_flags')
    op.drop_table('address')
    # ### end Alembic commands ###
