"""password_reset_on_login field for user. rename user_uuid to coordinator_uuid

Revision ID: 78c51adafd4e
Revises: 26380757f872
Create Date: 2020-06-23 03:41:42.979676

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '78c51adafd4e'
down_revision = '26380757f872'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('session', sa.Column('coordinator_uuid', postgresql.UUID(as_uuid=True), nullable=True))
    op.drop_constraint('session_user_uuid_fkey', 'session', type_='foreignkey')
    op.create_foreign_key(None, 'session', 'user', ['coordinator_uuid'], ['uuid'])
    op.drop_column('session', 'user_uuid')
    op.drop_constraint('task_assigned_rider_fkey', 'task', type_='foreignkey')
    op.drop_column('task', 'assigned_rider')
    op.add_column('user', sa.Column('password_reset_on_login', sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user', 'password_reset_on_login')
    op.add_column('task', sa.Column('assigned_rider', postgresql.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key('task_assigned_rider_fkey', 'task', 'user', ['assigned_rider'], ['uuid'])
    op.add_column('session', sa.Column('user_uuid', postgresql.UUID(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'session', type_='foreignkey')
    op.create_foreign_key('session_user_uuid_fkey', 'session', 'user', ['user_uuid'], ['uuid'])
    op.drop_column('session', 'coordinator_uuid')
    # ### end Alembic commands ###
