"""proper id names for Note foreign keys

Revision ID: 8af2aaba6f0e
Revises: b70ad3f5fc78
Create Date: 2019-10-26 19:52:24.129875

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8af2aaba6f0e'
down_revision = 'b70ad3f5fc78'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('note', sa.Column('deliverable_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.add_column('note', sa.Column('session_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.add_column('note', sa.Column('task_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.add_column('note', sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.add_column('note', sa.Column('vehicle_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.drop_constraint('note_task_fkey', 'note', type_='foreignkey')
    op.drop_constraint('note_user_fkey', 'note', type_='foreignkey')
    op.drop_constraint('note_vehicle_fkey', 'note', type_='foreignkey')
    op.drop_constraint('note_deliverable_fkey', 'note', type_='foreignkey')
    op.drop_constraint('note_session_fkey', 'note', type_='foreignkey')
    op.create_foreign_key(None, 'note', 'deliverable', ['deliverable_id'], ['uuid'])
    op.create_foreign_key(None, 'note', 'vehicle', ['vehicle_id'], ['uuid'])
    op.create_foreign_key(None, 'note', 'task', ['task_id'], ['uuid'])
    op.create_foreign_key(None, 'note', 'user', ['user_id'], ['uuid'])
    op.create_foreign_key(None, 'note', 'session', ['session_id'], ['uuid'])
    op.drop_column('note', 'task')
    op.drop_column('note', 'vehicle')
    op.drop_column('note', 'session')
    op.drop_column('note', 'user')
    op.drop_column('note', 'deliverable')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('note', sa.Column('deliverable', postgresql.UUID(), autoincrement=False, nullable=True))
    op.add_column('note', sa.Column('user', postgresql.UUID(), autoincrement=False, nullable=True))
    op.add_column('note', sa.Column('session', postgresql.UUID(), autoincrement=False, nullable=True))
    op.add_column('note', sa.Column('vehicle', postgresql.UUID(), autoincrement=False, nullable=True))
    op.add_column('note', sa.Column('task', postgresql.UUID(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'note', type_='foreignkey')
    op.drop_constraint(None, 'note', type_='foreignkey')
    op.drop_constraint(None, 'note', type_='foreignkey')
    op.drop_constraint(None, 'note', type_='foreignkey')
    op.drop_constraint(None, 'note', type_='foreignkey')
    op.create_foreign_key('note_session_fkey', 'note', 'session', ['session'], ['uuid'])
    op.create_foreign_key('note_deliverable_fkey', 'note', 'deliverable', ['deliverable'], ['uuid'])
    op.create_foreign_key('note_vehicle_fkey', 'note', 'vehicle', ['vehicle'], ['uuid'])
    op.create_foreign_key('note_user_fkey', 'note', 'user', ['user'], ['uuid'])
    op.create_foreign_key('note_task_fkey', 'note', 'task', ['task'], ['uuid'])
    op.drop_column('note', 'vehicle_id')
    op.drop_column('note', 'user_id')
    op.drop_column('note', 'task_id')
    op.drop_column('note', 'session_id')
    op.drop_column('note', 'deliverable_id')
    # ### end Alembic commands ###
